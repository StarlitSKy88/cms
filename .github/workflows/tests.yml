name: 'Tests'

on:
  push:
    branches:
      - main
      - develop
      - v4
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.mdx?'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

permissions:
  contents: read # to fetch code (actions/checkout)
  actions: read

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
      api: ${{ steps.filter.outputs.api }}
      e2e: ${{ steps.filter.outputs.e2e }}
      cli: ${{ steps.filter.outputs.cli }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: .github/filters.yaml

  pretty:
    name: 'pretty (node: ${{ matrix.node }})'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [20, 22]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - uses: nrwl/nx-set-shas@v4
      - name: Monorepo install
        uses: ./.github/actions/yarn-nm-install
      - name: Run lint
        run: yarn prettier:check

  lint:
    name: 'lint (node: ${{ matrix.node }})'
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [20, 22]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - uses: nrwl/nx-set-shas@v4
      - name: Monorepo install
        uses: ./.github/actions/yarn-nm-install
      - name: Monorepo build
        uses: ./.github/actions/run-build
      - name: Run lint
        run: yarn nx affected --target=lint --parallel --nx-ignore-cycles

  build:
    name: 'build (node: ${{ matrix.node }})'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [20, 22]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - name: Monorepo install
        uses: ./.github/actions/yarn-nm-install
      - name: Monorepo build
        uses: ./.github/actions/run-build

  typescript:
    name: 'typescript (node: ${{ matrix.node }})'
    needs: [changes, build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [20, 22]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - uses: nrwl/nx-set-shas@v4
      - name: Monorepo install
        uses: ./.github/actions/yarn-nm-install
      - name: Monorepo build
        uses: ./.github/actions/run-build
      - name: TSC for packages
        run: yarn nx affected --target=test:ts --nx-ignore-cycles
      - name: TSC for back
        run: yarn nx affected --target=test:ts:back --nx-ignore-cycles
      - name: TSC for front
        run: yarn nx affected --target=test:ts:front --nx-ignore-cycles

  e2e_ce:
    if: needs.changes.outputs.backend == 'true' || needs.changes.outputs.frontend == 'true' || needs.changes.outputs.e2e == 'true'
    timeout-minutes: 60
    needs: [changes, build]
    name: '[CE] e2e (browser: ${{ matrix.project }}) (shard: ${{ matrix.shard }})'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # remove once tests aren't flaky
      matrix:
        project: ['chromium', 'webkit', 'firefox']
        shard: [1/2, 2/2]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Monorepo install
        uses: ./.github/actions/yarn-nm-install

      - name: Install Playwright Browsers
        run: npx playwright@1.42.1 install --with-deps

      - name: Monorepo build
        uses: ./.github/actions/run-build

      - name: Run [CE] E2E tests
        uses: ./.github/actions/run-e2e-tests
        with:
          runEE: false
          jestOptions: '--project=${{ matrix.project }} --shard=${{ matrix.shard }}'

      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: ce-${{ matrix.project }}--playwright-trace
          path: test-apps/e2e/test-results/**/trace.zip
          retention-days: 1

  e2e_ee:
    if: needs.changes.outputs.backend == 'true' || needs.changes.outputs.frontend == 'true' || needs.changes.outputs.e2e == 'true'
    timeout-minutes: 60
    needs: [changes, build]
    name: '[EE] e2e (browser: ${{ matrix.project }}) (shard: ${{ matrix.shard }})'
    runs-on: ubuntu-latest
    env:
      STRAPI_LICENSE: ${{ secrets.strapiLicense }}
    strategy:
      fail-fast: false # remove once tests aren't flaky
      matrix:
        project: ['chromium', 'webkit', 'firefox']
        shard: [1/2, 2/2]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Monorepo install
        uses: ./.github/actions/yarn-nm-install

      - name: Install Playwright Browsers
        run: npx playwright@1.42.1 install --with-deps

      - name: Monorepo build
        uses: ./.github/actions/run-build

      - name: Run [EE] E2E tests
        uses: ./.github/actions/run-e2e-tests
        with:
          runEE: true
          enableFutureFeatures: true
          jestOptions: '--project=${{ matrix.project }} --shard=${{ matrix.shard }}'

      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: ee-${{ matrix.project }}--playwright-trace
          path: test-apps/e2e/test-results/**/trace.zip
          retention-days: 1

  cli:
    if: needs.changes.outputs.backend == 'true' || needs.changes.outputs.cli == 'true'
    timeout-minutes: 60
    needs: [changes, build]
    name: 'CLI Tests (node: ${{ matrix.node }})'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [20, 22]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Monorepo install
        uses: ./.github/actions/yarn-nm-install

      - name: Monorepo build
        uses: ./.github/actions/run-build

      - name: Run CLI tests
        run: yarn test:cli

  # TODO: this is a temp measure to test the e2e CI failures on webkit
  # All removed tests will be added back once the e2e CI failures are fixed
  test_result:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    name: aggregate_test_result
    needs: [pretty, lint, build, typescript, e2e_ce, e2e_ee, cli]
    steps:
      - run: exit 1
        if: >-
          ${{
                contains(needs.*.result, 'failure')
            || contains(needs.*.result, 'cancelled')
          }}
